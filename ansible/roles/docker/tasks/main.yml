---
# Remove any previous Docker installations and configurations
- name: Clean up old Docker installations
  block:
    - name: Remove old Docker packages
      apt:
        name: "{{ packages }}"
        state: absent
        purge: yes
      vars:
        packages:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
          - docker-ce
          - docker-ce-cli

    - name: Remove Docker files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/apt/keyrings/docker.gpg
        - /etc/apt/sources.list.d/docker.list
        - /usr/share/keyrings/docker-archive-keyring.gpg
        - /etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list

# Update system and install prerequisites
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - python3-pip
      - apt-transport-https
      - software-properties-common
    state: present

# Install Docker using official script
- name: Install Docker using official script
  shell: |
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
  args:
    creates: /usr/bin/docker

# Install Docker Compose
- name: Install Docker Compose
  apt:
    pkg:
      - docker-compose
    state: present

# Configure Docker service
- name: Ensure Docker is started and enabled
  service:
    name: docker
    state: started
    enabled: yes

# Configure user permissions
- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

# Verify Docker installation
- name: Test Docker installation
  command: docker --version
  register: docker_version
  changed_when: false

- name: Display Docker version
  debug:
    var: docker_version.stdout

# Install Python Docker module for Ansible
- name: Install Python Docker module
  apt:
    name: python3-docker
    state: present
    update_cache: yes
